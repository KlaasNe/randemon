{"version":3,"sources":["components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Game","props","updatePixiCnt","element","pixi_cnt","children","length","appendChild","app","view","init","initSocket","socket","io","on","console","log","id","players","player","sprite","get","x","width","y","height","setAnimation","dir","createPlayers","removePlayer","addPlayer","playing","textures","playerSheet","standDown","walkUp","walkDown","walkRight","walkLeft","play","forEach","this","bind","createPlayerSprite","world","addChild","set","removeChild","delete","data","PIXI","anchor","animationSpeed","loop","setParent","scale","calcRelativePos","calcRelativeX","calcRelativeY","background","bgSize","inputSprite","type","forceSize","bgContainer","mask","beginFill","drawRect","endFill","resize","sp","winratio","spratio","pos","position","container","doResize","loadBackground","from","loader","resources","url","slide","stage","loadBackground2","image","doneLoading","e","createPlayerSheet","createPlayer","up","down","left","right","document","onkeydown","evt","key","onkeyup","window","speed","ticker","add","delta","emit","onComplete","sheet","getChar","names","n","i","push","load","WHITE","tint","game","React","createRef","backgroundColor","Map","ref","Component","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c73aa7ec.chunk.js","sourcesContent":["import React from 'react'\r\nimport * as PIXI from 'pixi.js'\r\nimport io from 'socket.io-client'\r\n\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.game = React.createRef()\r\n    this.pixi_cnt = null\r\n    this.app = new PIXI.Application({backgroundColor: 0xaaaaaa})\r\n    window.app = this.app\r\n    this.scale = 2\r\n    this.players = new Map()\r\n  }\r\n  updatePixiCnt = (element) => {\r\n    // the element is the DOM object that we will use as container to add pixi stage(canvas)\r\n    this.pixi_cnt = element;\r\n    //now we are adding the application to the DOM element which we got from the Ref.\r\n    if(this.pixi_cnt && this.pixi_cnt.children.length<=0) {\r\n      this.pixi_cnt.appendChild(this.app.view);\r\n    }\r\n\r\n    this.init()\r\n  }\r\n\r\n  initSocket = () => {\r\n    this.socket = io()\r\n\r\n    let socket = this.socket\r\n\r\n    socket.on('connect', () => {\r\n      console.log('socket id', socket.id)\r\n    })\r\n    socket.on('playerPositions', players => {\r\n      for(let player of players) {\r\n        if(player.id === socket.id) {\r\n          /*this.world.x = -player.x\r\n          this.world.y = -player.y\r\n          this.setAnimation(this.player, player.dir)*/\r\n        } else {\r\n          let sprite = this.players.get(player.id)\r\n          sprite.x = player.x + this.app.view.width/2\r\n          sprite.y = player.y + this.app.view.height/2\r\n          this.setAnimation(sprite, player.dir)\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n    socket.on('initPlayers', players => {\r\n      this.createPlayers(players)\r\n    })\r\n\r\n    socket.on('removePlayer', id => {\r\n      this.removePlayer(id)\r\n    })\r\n\r\n    socket.on('addPlayer', player => {\r\n      this.addPlayer(player)\r\n    })\r\n  }\r\n  setAnimation = (sprite, dir) => {\r\n    if(!sprite.playing) {\r\n      switch (dir) {\r\n        case 's':\r\n          sprite.textures = this.playerSheet.standDown\r\n          break\r\n        case 'u':\r\n          sprite.textures = this.playerSheet.walkUp\r\n          break\r\n        case 'd':\r\n          sprite.textures = this.playerSheet.walkDown\r\n          break\r\n        case 'r':\r\n          sprite.textures = this.playerSheet.walkRight\r\n          break\r\n        case 'l':\r\n          sprite.textures = this.playerSheet.walkLeft\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      sprite.play()\r\n    }\r\n  }\r\n  createPlayers = (players) => {\r\n    players.forEach(function (player) {\r\n      this.addPlayer(player)\r\n    }.bind(this))\r\n  }\r\n  addPlayer = player => {\r\n    let sprite = this.createPlayerSprite(player)\r\n    console.log('adding player', player)\r\n    //this.app.stage.addChild(sprite)\r\n    this.world.addChild(sprite)\r\n    this.players.set(player.id, sprite)\r\n  }\r\n  removePlayer = id => {\r\n    let sprite = this.players.get(id)\r\n    console.log('removing player', id)\r\n    //this.app.stage.removeChild(sprite)\r\n    this.world.removeChild(sprite)\r\n    this.players.delete(id)\r\n  }\r\n  createPlayerSprite = (data) => {\r\n    let player = new PIXI.AnimatedSprite(this.playerSheet.standDown)\r\n    player.anchor.set(0.5)\r\n    player.animationSpeed = .5\r\n    player.loop = false\r\n    /*Object.defineProperties(player, {\r\n      x: {\r\n        get: function() {\r\n          return this.calcRelativeX(player.absX)\r\n        }.bind(this)\r\n      },\r\n      y: {\r\n        get: function() {\r\n          return this.calcRelativeY(player.absY)\r\n        }.bind(this)\r\n      },\r\n      absX: {\r\n        value: data.x,\r\n        writable: true\r\n      },\r\n      absY: {\r\n        value: data.y,\r\n        writable: true\r\n      }\r\n    })*/\r\n    player.setParent(this.world)\r\n    player.x = data.x + this.app.view.width/2\r\n    player.y = data.y + this.app.view.height/2\r\n    let scale = 0.6\r\n    player.width *= scale * this.scale\r\n    player.height *= scale * this.scale\r\n    return player\r\n  }\r\n  calcRelativePos = (x,y) => {\r\n    return {x:this.calcRelativeX(x), y:this.calcRelativeY(y)}\r\n  }\r\n  calcRelativeX = x => {\r\n    return x + this.world.x + this.app.view.width/2\r\n  }\r\n  calcRelativeY = y => {\r\n    return y + this.world.y + this.app.view.height/2\r\n  }\r\n  background = (bgSize, inputSprite, type, forceSize) => {\r\n    let sprite = inputSprite;\r\n    let bgContainer = new PIXI.Container();\r\n    let mask = new PIXI.Graphics().beginFill(0x8bc5ff).drawRect(0,0, bgSize.x, bgSize.y).endFill();\r\n    bgContainer.mask = mask;\r\n    bgContainer.addChild(mask);\r\n    bgContainer.addChild(sprite);\r\n\r\n    function resize() {\r\n      let sp = {x:sprite.width,y:sprite.height};\r\n      if(forceSize) sp = forceSize;\r\n      let winratio = bgSize.x/bgSize.y;\r\n      let spratio = sp.x/sp.y;\r\n      let scale = 1;\r\n      let pos = new PIXI.Point(0,0);\r\n      if(type == 'cover' ? (winratio > spratio) : (winratio < spratio)) {\r\n        //photo is wider than background\r\n        scale = bgSize.x/sp.x;\r\n        pos.y = -((sp.y*scale)-bgSize.y)/2\r\n      } else {\r\n        //photo is taller than background\r\n        scale = bgSize.y/sp.y;\r\n        pos.x = -((sp.x*scale)-bgSize.x)/2\r\n      }\r\n\r\n      sprite.scale = new PIXI.Point(scale,scale);\r\n      sprite.position = pos;\r\n    }\r\n\r\n    resize();\r\n\r\n    return {\r\n      container: bgContainer,\r\n      doResize: resize\r\n    }\r\n  }\r\n  loadBackground = () => {\r\n    let container = new PIXI.Container()\r\n    let sprite = new PIXI.Sprite.from(this.app.loader.resources['world'].url)\r\n    let slide = this.background({x:this.app.view.width, y:this.app.view.height}, sprite,'cover');\r\n    container.addChild(slide.container);\r\n    this.app.stage.addChild(container)\r\n  }\r\n  loadBackground2 = () => {\r\n    this.world = new PIXI.Container()\r\n    this.image = new PIXI.Sprite.from(this.app.loader.resources['world'].url)\r\n    this.image.width *= this.scale\r\n    this.image.height *= this.scale\r\n    this.app.stage.addChild(this.world)\r\n    this.world.addChild(this.image)\r\n  }\r\n  doneLoading = e => {\r\n    this.loadBackground2()\r\n    this.createPlayerSheet()\r\n    this.createPlayer()\r\n\r\n    let dir = {\r\n      up: false,\r\n      down: false,\r\n      left: false,\r\n      right: false\r\n    }\r\n    this.dir = dir\r\n\r\n    document.onkeydown = function(evt) {\r\n      switch(evt.key) {\r\n        case 'w': dir.up = true\r\n          break\r\n        case 's': dir.down = true\r\n          break\r\n        case 'd': dir.right = true\r\n          break\r\n        case 'a': dir.left = true\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n    document.onkeyup = function(evt) {\r\n      switch(evt.key) {\r\n        case 'w': dir.up = false\r\n          break\r\n        case 's': dir.down = false\r\n          break\r\n        case 'd': dir.right = false\r\n          break\r\n        case 'a': dir.left = false\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n    window.player = this.player\r\n    let speed = 2.5 * this.scale\r\n    this.app.ticker.add((delta) => {\r\n      if(dir.down) {\r\n        if(!this.player.playing) {\r\n          this.player.textures = this.playerSheet.walkDown;\r\n          this.player.play()\r\n        }\r\n\r\n        this.world.y -= speed\r\n        this.socket.emit('updatePosition',{x: -this.world.x, y: -this.world.y, dir: 'd'})\r\n      }\r\n      if(dir.up) {\r\n        if(!this.player.playing) {\r\n          this.player.textures = this.playerSheet.walkUp;\r\n          this.player.play()\r\n        }\r\n        this.world.y += speed\r\n        this.socket.emit('updatePosition',{x: -this.world.x, y: -this.world.y, dir: 'u'})\r\n      }\r\n      if(dir.right) {\r\n        if(!this.player.playing) {\r\n          this.player.textures = this.playerSheet.walkRight;\r\n          this.player.play()\r\n        }\r\n        this.world.x -= speed\r\n        this.socket.emit('updatePosition',{x: -this.world.x, y: -this.world.y, dir: 'r'})\r\n      }\r\n      if(dir.left) {\r\n        if(!this.player.playing) {\r\n          this.player.textures = this.playerSheet.walkLeft;\r\n          this.player.play()\r\n        }\r\n        this.world.x += speed\r\n        this.socket.emit('updatePosition',{x: -this.world.x, y: -this.world.y, dir: 'l'})\r\n      }\r\n    })\r\n\r\n    this.initSocket()\r\n  }\r\n  createPlayer = () => {\r\n    this.player = new PIXI.AnimatedSprite(this.playerSheet.standDown)\r\n    this.player.anchor.set(0.5)\r\n    this.player.animationSpeed = .5\r\n    this.player.loop = false\r\n    this.player.x = this.app.view.width/2\r\n    this.player.y = this.app.view.height/2\r\n    this.app.stage.addChild(this.player)\r\n    let scale = 0.6\r\n    this.player.width *= scale * this.scale\r\n    this.player.height *= scale * this.scale\r\n    this.player.play()\r\n    this.player.onComplete = () => {\r\n      if((!this.dir.left && !this.dir.right && !this.dir.up && !this.dir.down) || true) {\r\n        this.player.textures = this.playerSheet.standDown\r\n        this.socket.emit('updatePosition', {x: -this.world.x, y: -this.world.y, dir: 's'})\r\n      }\r\n\r\n    }\r\n  }\r\n  createPlayerSheet = () => {\r\n    let sheet = new PIXI.BaseTexture.from(this.app.loader.resources['agent'].url)\r\n    let w = 30\r\n    let h = 52\r\n    let fr = 9\r\n    this.playerSheet = {}\r\n    function getChar(x,y) {\r\n      return new PIXI.Rectangle(x*w, y*h, w, h)\r\n    }\r\n    this.playerSheet['standDown'] = [\r\n      new PIXI.Texture(sheet,getChar(0,2))\r\n    ]\r\n    this.playerSheet['standUp'] = [\r\n      new PIXI.Texture(sheet, getChar(0,0))\r\n    ]\r\n    this.playerSheet['standRight'] = [\r\n      new PIXI.Texture(sheet, getChar(0,3))\r\n    ]\r\n    this.playerSheet['standLeft'] = [\r\n      new PIXI.Texture(sheet, getChar(0,1))\r\n    ]\r\n\r\n    let names = ['walkUp', 'walkLeft', 'walkDown', 'walkRight']\r\n    for(let n = 0; n < names.length; n++) {\r\n      this.playerSheet[names[n]] = []\r\n      for(let i = 0; i < fr; i++) {\r\n        this.playerSheet[names[n]].push(new PIXI.Texture(sheet, getChar(i,n)))\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  init = () => {\r\n    const app = this.app\r\n\r\n\r\n\r\n    app.loader.add('agent','assets/agent.png')\r\n    app.loader.add('world', 'assets/world.png')\r\n\r\n    app.loader.load(this.doneLoading)\r\n\r\n    const player = PIXI.Sprite.from(PIXI.Texture.WHITE);\r\n    player.width = 200;\r\n    player.height = 200;\r\n    player.tint = 0xFF0000;\r\n    player.position.x = 50\r\n    player.position.y = 50\r\n    //app.stage.addChild(player);\r\n\r\n\r\n  }\r\n  render() {\r\n    return (<div ref={this.updatePixiCnt}></div>)\r\n  }\r\n}\r\n\r\nexport default Game\r\n","import React from 'react';\nimport './App.css';\nimport Game from './components/Game'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Game></Game>\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}